---
description: "Контекст проекта SHRI 2025: архитектура, технологический стек, структура монорепозитория"
globs: 
alwaysApply: false
---
# Контекст проекта

## Основная информация

- **Название проекта**: SHRI 2025 - Сервис межгалактической аналитики
- **Назначение**: Фронтенд-приложение для загрузки CSV-файлов, получения аналитических данных и отслеживания истории загрузок
- **Архитектура**: Монорепозиторий с использованием `npm workspaces`

## Структура монорепозитория

### 1. Основное приложение (`/`)
- **Ответственность**: Бизнес-логика, интеграция компонентов, страницы, управление состоянием
- **Ключевые директории**: 
  - `src/pages` - страницы приложения
  - `src/components` - сложные компоненты
  - `src/store` - управление состоянием (Zustand)

### 2. Пакет `@shri/ui-kit` (`packages/ui-kit`)
- **Ответственность**: Изолированные, переиспользуемые UI-компоненты
- **Включает**: Storybook, UI-тесты, снэпшот-тесты

### 3. Пакет `@shri/playwright` (`packages/playwright`)
- **Ответственность**: Утилиты для E2E-тестирования
- **Включает**: Page Objects, Actions, Mocker, кастомные фикстуры

## Технологический стек

- **Фреймворк**: React 18.2.0
- **Язык**: TypeScript 5.2.2
- **Сборщик**: Vite 5.1.6
- **Состояние**: Zustand 4.5.2 + Redux DevTools
- **Роутинг**: React Router DOM 6.22.3
- **Стилизация**: CSS Modules
- **Тестирование**: Vitest + RTL, Playwright
- **Линтинг**: ESLint + Prettier

## Ключевые архитектурные решения

- **State Management**: Zustand с организацией по "фича-слайсам" (имитация Redux Toolkit)
- **Персистентность**: История загрузок в localStorage
- **Модальные окна**: React Portals для корректного DOM-размещения
- **API-слой**: Выделенный слой в `src/api` для всех сетевых запросов
- **Псевдонимы**: Настроены в `tsconfig.json` и `vite.config.ts` для удобства импортов

## Страницы приложения

- **Home** (`/`) - Загрузка и анализ CSV файлов
- **Generate** (`/generate`) - Генерация дополнительных данных
- **History** (`/history`) - История анализов с модальными окнами
